"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

;

function hamburger() {
  var hamburger = document.querySelector('.hamburger');
  var hamburger_menu = document.querySelector('.nav__list');
  var link_elems = document.querySelectorAll('.nav__link');
  var header = document.querySelector('.header');
  var body = document.querySelector('body');

  hamburger.onclick = function () {
    hamburger.classList.toggle('_active');
  };

  setInterval(function () {
    if (hamburger.classList.contains("_active")) {
      header.classList.add('header-bg-none');
      hamburger_menu.classList.add('hamburger-menu_active');
    } else {
      header.classList.remove('header-bg-none');
      hamburger_menu.classList.remove('hamburger-menu_active');
    }
  }, 100);
  link_elems.forEach(function (item, i) {
    item.onclick = function () {
      hamburger.classList.remove("_active");
    };
  });
}

hamburger();
;

function header_fix() {
  var header = document.querySelector('.header');

  document.onscroll = function () {
    showHeader();
  };

  function showHeader() {
    if (window.pageYOffset > 200) {
      header.classList.add('header_fixed');
    } else {
      header.classList.remove('header_fixed');
    }
  }
}

header_fix();
; // function hover_bg_img() {
//   var slide_box = document.querySelector('.hover-bg-img');
//   slide_box.onmousedown = function () {
//     slide_box.onmousemove = function (e) {
//       var x = e.offsetX;
//       document.querySelector('.hover-bg-img__box').style.width = x + 'px';
//     };
//   };
//   slide_box.addEventListener("touchstart", function (e_1) {
//     document.querySelector('.hover-bg-img__box').style.width = e_1.touches[0].pageX + 'px';
//     slide_box.addEventListener("touchmove", function (e_2) {
//       var x = e_2.touches[0].pageX;
//       document.querySelector('.hover-bg-img__box').style.width = x + 'px';
//     });
//   });
//   slide_box.onmouseup = function () {
//     slide_box.onmousemove = null;
//   };
//   slide_box.onmouseleave = function () {
//     slide_box.onmousemove = null;
//   };
//   window.onresize = function () {
//     img_w_rez();
//   };
//   function img_w_rez() {
//     var imgs = slide_box.querySelectorAll('img');
//     var box_w = slide_box.clientWidth;
//     imgs.forEach(function (el) {
//       el.style.width = "".concat(box_w, "px");
//     });
//   }
//   img_w_rez();
// }
// hover_bg_img();
// ;

;

function slider_packs() {
  var slider_1 = new Splide('#slider-cards_1', {
    perPage: 4,
    perMove: 1,
    arrows: false,
    type: 'loop',
    pagination: true,
    autoplay: true
  }).mount();
  media(slider_1);
  /*____________________________________*/

  var slider_2 = new Splide('#slider-cards_2', {
    perPage: 4,
    perMove: 1,
    arrows: false,
    type: 'loop',
    pagination: true,
    autoplay: true
  }).mount();
  media(slider_2);

  window.onresize = function () {
    media(slider_2);
    media(slider_1);
  };
}

slider_packs();

function btn_flip() {
  var btns = document.querySelectorAll('.flip');
  btns.forEach(function (btn) {
    btn.onclick = function () {
      var card = btn.parentNode;
      card.classList.toggle('_active');
    };
  });
}

btn_flip();
;

function s_team() {
  var btns = document.querySelectorAll('.more');
  btns.forEach(function (btn) {
    btn.onclick = function () {
      btn.parentNode.classList.toggle('_active');
    };
  });
}

s_team();
;

function anchors() {
  var anchors = document.querySelectorAll("a[href*='#']");

  var _iterator = _createForOfIteratorHelper(anchors),
      _step;

  try {
    var _loop = function _loop() {
      var anchor = _step.value;
      anchor.addEventListener('click', function (event) {
        event.preventDefault();
        var blockID = anchor.getAttribute('href');
        document.querySelector('' + blockID).scrollIntoView({
          behavior: "smooth",
          block: "start"
        });
      });
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

anchors();
;
AOS.init({
  // Global settings:
  disable: false,
  // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded',
  // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init',
  // class applied after initialization
  animatedClassName: 'aos-animate',
  // class applied on animation
  useClassNames: false,
  // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false,
  // disables automatic mutations' detections (advanced)
  debounceDelay: 50,
  // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99,
  // the delay on throttle used while scrolling the page (advanced)
  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 120,
  // offset (in px) from the original trigger point
  delay: 0,
  // values from 0 to 3000, with step 50ms
  duration: 400,
  // values from 0 to 3000, with step 50ms
  easing: 'ease',
  // default easing for AOS animations
  once: false,
  // whether animation should happen only once - while scrolling down
  mirror: false,
  // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation

});
window.addEventListener('load', AOS.refresh);

function media(slider) {
  // options;
  var desktop = true;
  var d_slides = 4;
  var laptop = false;
  var l_slides = 3;
  var tablet = false;
  var t_slides = 2;
  var phone = false;
  var p_slides = 1;
  var slidesToShow = 0;
  var mediaDesktop = window.matchMedia('(min-width: 1400px)');
  var mediaLaptop = window.matchMedia('(max-width: 1400px)');
  var mediaTablet = window.matchMedia('(max-width: 980px)');
  var mediaPhone = window.matchMedia('(max-width: 600px)');

  if (mediaDesktop.matches) {
    tablet = false;
    laptop = false;
    phone = false;
    desktop = true;
  }

  if (mediaLaptop.matches) {
    desktop = false;
    tablet = false;
    phone = false;
    laptop = true;
  }

  if (mediaTablet.matches) {
    desktop = false;
    laptop = false;
    phone = false;
    tablet = true;
  }

  if (mediaPhone.matches) {
    tablet = false;
    laptop = false;
    desktop = false;
    phone = true;
  }

  if (desktop) {
    slidesToShow = d_slides;
  }

  if (laptop) {
    slidesToShow = l_slides;
  }

  if (tablet) {
    slidesToShow = t_slides;
  }

  if (phone) {
    slidesToShow = p_slides;
  }

  slider.options = {
    perPage: slidesToShow
  };
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
