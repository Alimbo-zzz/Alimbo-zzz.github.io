"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var team = [{
  "name": "Иван Кабанов",
  "post": "CEO",
  "img": "Ivan"
}, {
  "name": "Олег Сердюк",
  "post": "CTO",
  "img": "Oleg"
}, {
  "name": "Денис Горбатовский",
  "post": "Game Designer",
  "img": "Denis_1"
}, {
  "name": "Оксана Бахина",
  "post": "Project Manager, HR",
  "img": "Oksana"
}, {
  "name": "Денис Пименов",
  "post": "Android Developer",
  "img": "Denis_2"
}, {
  "name": "Елена Сметанина",
  "post": "Junior Project Manager",
  "img": "Helena"
}, {
  "name": "Алим Мамбетов",
  "post": "Front-End Developer",
  "img": "Alim"
}, {
  "name": "Владислав Самоваров",
  "post": "UX/UI Designer",
  "img": "Vlad"
}, {
  "name": "Роман Федоров",
  "post": "Android Developer",
  "img": "Roman"
}, {
  "name": "Ксения Гарбузова",
  "post": "QA Tester",
  "img": "Ksenia"
}, {
  "name": "Вячеслав Морозов",
  "post": "Android Developer",
  "img": "Vyacheslav"
}, {
  "name": "Анна Прус",
  "post": "Account Manager",
  "img": "Anna"
}, {
  "name": "Даниил Золотарев",
  "post": "Android Developer",
  "img": "Daniil"
}, {
  "name": "Римма Шигапова",
  "post": "Artist",
  "img": "Rimma"
}, {
  "name": "Андрей Конаев",
  "post": "SMM",
  "img": "Andrey"
}, {
  "name": "Арина Блинова",
  "post": "Copywriter",
  "img": "Arina"
}, {
  "name": "Ринат Усманов",
  "post": "Head of ASO",
  "img": "Rinat"
}, {
  "name": "Полина Вирки",
  "post": "UX/UI Designer",
  "img": "Pauline"
}, {
  "name": "Рамиль Зинатуллин",
  "post": "Head of UA",
  "img": "Ramil"
}, {
  "name": "Анастасия Жулева",
  "post": "UX/UI Designer",
  "img": "Anastasia"
}, {
  "name": "Дмитрий Макаров",
  "post": "Android Developer",
  "img": "Dmitry"
}];

function accordeon_f() {
  var accordeon = document.querySelector('.accordeon');
  var list = accordeon.querySelector('ul');
  var elems = accordeon.querySelectorAll('li');
  elems.forEach(function (el, i) {
    var btn = el.querySelector('.accordeon__btn');
    var title = el.querySelector('.title');

    btn.onclick = function () {
      return toggle(el);
    };

    title.onclick = function () {
      return toggle(el);
    };
  }); // func_____________

  function toggle(el) {
    if (el.classList.contains('_active')) {
      el.classList.remove('_active');
    } else {
      remove_class();
      el.classList.add('_active');
    }
  }

  function remove_class() {
    elems.forEach(function (el, i) {
      el.classList.remove('_active');
    });
  }
}

accordeon_f();
;

function hamburger() {
  var hamburger = document.querySelector('.hamburger');
  var hamburger_menu = document.querySelector('.nav__list');
  var link_elems = document.querySelectorAll('.nav__link');
  var overlay = document.querySelector('.overlay');
  var body = document.querySelector('body'); //var preloader = document.querySelector('.preloading');

  hamburger.onclick = function () {
    hamburger.classList.toggle('_active');
  };

  setInterval(function () {
    /*else if(preloader.classList.contains('_active')){
      body.style.overflow = 'hidden';      
    }*/
    if (hamburger.classList.contains("_active")) {
      hamburger_menu.classList.add('hamburger-menu_active');
      body.style.overflow = 'hidden';
      overlay.classList.add('_active');
    } else {
      hamburger_menu.classList.remove('hamburger-menu_active');
      body.style.overflow = 'auto';
      overlay.classList.add('_remove');
    }
  }, 100);

  overlay.onclick = function () {
    hamburger.classList.remove('_active');
    overlay.classList.remove('_active');
  };

  link_elems.forEach(function (item, i) {
    item.onclick = function () {
      hamburger.classList.remove("_active");
    };
  });
}

hamburger();
;

function header_fix() {
  var header = document.querySelector('.header');

  document.onscroll = function () {
    showHeader();
  };

  function showHeader() {
    if (window.pageYOffset > 200) {
      header.classList.add('header_fixed');
    } else {
      header.classList.remove('header_fixed');
    }
  }
}

header_fix();
;

function slider_portfolio() {
  var slider = document.querySelector('.portfolio');
  var list = document.querySelector('.portfolio__list');
  var list_img = list.querySelectorAll('li');
  var info = document.querySelector('.portfolio__info');
  var info_el = info.querySelectorAll('li');
  var btn_prev = slider.querySelector('._prev');
  var btn_next = slider.querySelector('._next');
  var order_active = slider.querySelector('.portfolio__active');
  var order_length = slider.querySelector('.portfolio__length');
  var activeIndex = 0;
  var slides = list_img.length;

  btn_next.onclick = function () {
    return next();
  };

  btn_prev.onclick = function () {
    return prev();
  };
  /*func___________*/


  function check() {
    list.style.transform = "translateX(-".concat(activeIndex * 100, "%)");
    info.style.transform = "translateY(".concat(activeIndex * 100, "%)");
    order();
    check_btns();
  }

  check();

  function next() {
    if (activeIndex < slides - 1) {
      activeIndex++;
      check();
    } else check();
  }

  function prev() {
    if (activeIndex > 0) {
      activeIndex--;
      check();
    } else check();
  }

  function order() {
    var order_a;
    var order_l;
    if (slides < 10) order_l = "/0".concat(slides);else order_l = "/".concat(slides);
    if (activeIndex + 1 < 10) order_a = "0".concat(activeIndex + 1);else order_a = "".concat(activeIndex + 1);
    order_active.textContent = order_a;
    order_length.textContent = order_l;
  }

  function check_btns() {
    if (activeIndex == 0) {
      btn_prev.disabled = true;
    } else if (activeIndex == slides - 1) {
      btn_next.disabled = true;
    } else {
      btn_prev.disabled = false;
      btn_next.disabled = false;
    }
  }
}

slider_portfolio();
;
var team_slider = new Splide('#team-slider', {
  pagination: false,
  arrows: false
}).mount();
team_slider.on('moved', function () {
  return team_slider_check(team_slider.index);
});

function team_slider_check(activeIndex) {
  slide_opacity(activeIndex);
  team_slider_order(activeIndex);
  team_slider_info(activeIndex);
  team_slider_btns(activeIndex);
}
/*____________func________*/


function team_addSlides() {
  var slider = document.querySelector('#team-slider');
  var old_slides = slider.querySelectorAll('li');
  old_slides.forEach(function (el) {
    return el.remove();
  }); //remove_slides

  team.forEach(function (el, i) {
    team_slider.add("<li class=\"splide__slide\">\n\t\t\t\t<div class=\"splide__box\">\n\t\t\t\t\t<img src=\"./assets/images/team/".concat(el.img, ".png\">\n\t\t\t\t</div>\n\t\t\t</li>"));
  });
  slide_opacity(0);
  team_slider_order(0);
  team_slider_info(0);
  team_slider_btns(0);
}

team_addSlides();

function slide_opacity(activeIndex) {
  var slider = document.querySelector('#team-slider');
  var slides = slider.querySelectorAll('li');
  slides.forEach(function (el, i) {
    el.classList.remove('_visible_1', '_visible_2');
  });

  if (activeIndex != slides.length - 1) {
    var second_slide = slides[activeIndex + 1];
    second_slide.classList.add('_visible_1');
  }

  if (activeIndex != slides.length - 2) {
    var third_slide = slides[activeIndex + 2];
    if (third_slide) third_slide.classList.add('_visible_2');
  }
}

slide_opacity(0);

function team_slider_order(activeIndex) {
  var slider = document.querySelector('#team-slider');
  var slides = slider.querySelectorAll('li').length;
  var order_active = document.querySelector('#team_active-index');
  var order_length = document.querySelector('#team_length');
  var order_a;
  var order_l;
  if (slides < 10) order_l = "/0".concat(slides);else order_l = "/".concat(slides);
  if (activeIndex + 1 < 10) order_a = "0".concat(activeIndex + 1);else order_a = "".concat(activeIndex + 1);
  order_active.textContent = order_a;
  order_length.textContent = order_l;
}

function team_slider_info(activeIndex) {
  var team_info = document.querySelector('.team__info');
  var name = team_info.querySelector('.text');
  var post = team_info.querySelector('.placeholder');
  name.textContent = "".concat(team[activeIndex].name);
  post.textContent = "".concat(team[activeIndex].post);
}

function team_slider_btns(activeIndex) {
  var section = document.querySelector('#s_team');
  var btn_prev = section.querySelector('._prev');
  var btn_next = section.querySelector('._next');
  var overlay_next = document.querySelector('.overlay-next');
  var slides = team.length;

  btn_next.onclick = function () {
    return team_slider.go('+');
  };

  btn_prev.onclick = function () {
    return team_slider.go('-');
  };

  overlay_next.onclick = function () {
    return team_slider.go('+');
  };
  /*____check___*/


  if (activeIndex == 0) {
    btn_prev.disabled = true;
  } else if (activeIndex == slides - 1) {
    btn_next.disabled = true;
  } else {
    btn_prev.disabled = false;
    btn_next.disabled = false;
  }
}

;

function anchors() {
  var anchors = document.querySelectorAll("a[href*='#']");

  var _iterator = _createForOfIteratorHelper(anchors),
      _step;

  try {
    var _loop = function _loop() {
      var anchor = _step.value;
      anchor.addEventListener('click', function (event) {
        event.preventDefault();
        var blockID = anchor.getAttribute('href');
        document.querySelector('' + blockID).scrollIntoView({
          behavior: "smooth",
          block: "start"
        });
      });
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

anchors();
;
AOS.init({
  // Global settings:
  disable: false,
  // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded',
  // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init',
  // class applied after initialization
  animatedClassName: 'aos-animate',
  // class applied on animation
  useClassNames: false,
  // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false,
  // disables automatic mutations' detections (advanced)
  debounceDelay: 50,
  // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99,
  // the delay on throttle used while scrolling the page (advanced)
  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 120,
  // offset (in px) from the original trigger point
  delay: 0,
  // values from 0 to 3000, with step 50ms
  duration: 400,
  // values from 0 to 3000, with step 50ms
  easing: 'ease',
  // default easing for AOS animations
  once: false,
  // whether animation should happen only once - while scrolling down
  mirror: false,
  // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation

});
window.addEventListener('load', AOS.refresh);

function form_focus() {
  var elems = document.querySelectorAll('input[type="text"], textarea');
  elems.forEach(function (el, i) {
    el.onfocus = function () {
      el.parentNode.classList.add('_focus', '_active');
    };

    el.onblur = function () {
      if (el.value == "" || el.value == " ") {
        el.parentNode.classList.remove('_active');
      }

      el.parentNode.classList.remove('_focus');
    };
  });
}

form_focus();
;

function preloading() {
  var preloader = document.querySelector('.loading');
  preloader.classList.add('_active');

  window.onload = function () {
    preloader.classList.remove('_active');
  };

  setTimeout(function () {
    preloader.classList.remove('_active');
  }, 5000);
}

preloading();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
