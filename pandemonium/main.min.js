"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var content = {
  /*base-page__________________*/

  /*s_intro*/
  "intro_text": {
    "en": "Welcome to Pandemonium, a world beyond the valley of the shadow of death. Lands in which there is an endless war for power. It is here that armies of fierce demons and beautiful demonettes clash under the leadership of future lords.",
    "ru": "Добро пожаловать в Пандемониум, мир, что лежит за долиной смертной тени. Земли, раздираемые бесконечной войной за власть. Именно здесь армии свирепых демонов и прекрасных демонесс сражаются под предвадительством будущих лордов."
  },

  /*hover_img_bg_title*/
  "hover_img_bg_title": {
    "en": "Become the Lord of the Underworld! Pandemonium are original nft cards with varying degrees of rarity, intended for collecting. Limited, unique and hot as hell.",
    "ru": "Стань Лордом преисподней! Пандемониум – это оригинальные NFT-карточки разной степени редкости, предназначенные для коллекционирования, ограниченные, уникальные и чертовски горячие."
  },

  /*s_info*/
  "s_info_grad_1": {
    "en": "JOIN OUR TELEGRAM COMMUNITY",
    "ru": "Присоединяйся к нам в  Telegram"
  },
  "s_info_grad_2": {
    "en": "You can find more information abou magical creatures in our bestiary",
    "ru": "Более подробную информацию о волшебных существах вы можете найти в нашем бестиарии."
  },
  "s_info_text_1": {
    "en": "Your time has come!",
    "ru": "Время пришло! "
  },
  "s_info_text_2": {
    "en": "Become the strongest hero of Pandemonium by subscribing to our telegram channel! News, events and special offers are waiting for you!",
    "ru": "Подпишись на наш телеграм-канал и стань сильнейшим героем Пандемониума! Тебя ждут новости, события и специальные предложения"
  },
  "s_info_text_3": {
    "en": "Naiad is the younger demoness of the rivers. It controls the movement of matter. Naiad rules from the waters of the Styx to the Great Lava Flow of the Underworld. She loves good jokes. Attention! Beauty Naiad can burn you with one glance.",
    "ru": "Наяда – младшая демонесса рек. Она контролирует движение материи. Наяда правит от вод Стикса до Великого Лавого Потока Преисподней. Она любит хорошие шутки. ОСТОРОЖНО! Красавица Наяда может испепелить тебя одним взглядом."
  },
  "s_info_title_1": {
    "en": "This is just the beginning. We're releasing the first batch of our limited edition cards with Pretty Naiad.",
    "ru": "Это только начало, Мы выпускаем первую партию лимитированной коллекции карточек с прекрасными наядами."
  },

  /*s_cards*/
  "s_card_title_1": {
    "en": "1-th pack",
    "ru": "Первый пак"
  },
  "s_card_title_2": {
    "en": "2-th pack",
    "ru": "Второй пак"
  },

  /*s_team*/
  "s_team_title": {
    "en": "Our team",
    "ru": "команда"
  },

  /*s_about*/
  "s_about_title_1": {
    "en": "About us",
    "ru": "О нас"
  },
  "s_about_title_2": {
    "en": "Our story",
    "ru": "Наша история"
  },
  "s_about_title_3": {
    "en": "Our mission",
    "ru": "Наша миссия"
  },
  "s_about_text_1": {
    "en": "We are a young team united by common interests and game development, with rich experience in the mobile market. Our project is a fantasy meta–universe with references to things we all love, bulit on a blockchain system using original NFT cards.",
    "ru": "Мы – молодая команда, объединяющая общими интересами и деятельностью в сфере разработки игр, с богатым опытом работы на мобильном рынке. Наш проект – это фэнтезийная мета – вселенная с отсылками к вещам, которые мы все любим, построенная на блокчейн-системе с использованием оригинальных NFT-карт."
  },
  "s_about_text_2": {
    "en": "In June 2021, a group of programmers and designers already working on mobile games turn their eyes on the blockchain system. It turned out that all of us bought NFT cards for collectible or blockchain games. Games cannot develop without technology, and technology is well promoted through games. We have all the potential to create new interesting products with the lastest technology.",
    "ru": "В июне 2021 года группа программистов и дизайнеров, уже работавшая над мобильными играми, обратила свой взор на блокчейн, коллекций или блокчейн-игр. Игры не могут развиваться без технологий, а технологии хорошо продвигаются через игры. У нас есть все возможности для создания новых интересных продуктов с использованием новейших технологий."
  },
  "s_about_text_3": {
    "en": "The priority for us is to use and popularize modern technologies and create games. We believe that the blockchain system is the future.",
    "ru": "Приоритетом для нам является использование и популяризация современных технологий и создание игр. Мы верим, что за системой блокчейн – будущее."
  },

  /*bestiary-page_____________________*/
  "bestiary_main_title": {
    "en": "WELCOME TO THE PANEDONIUM BESTIARY",
    "ru": "Добро пожаловать в бестиарий Пандемониума"
  },
  "pack_1_title": {
    "en": "MERMAID NAIADS",
    "ru": "Русалки–Наяды"
  },
  "pack_2_title": {
    "en": "Nymph",
    "ru": "Малые Наяды"
  },

  /*lore-page____________*/
  "lore-main_title": {
    "en": "Welcome to Pandemonium, a world beyond the valley of the shadow of death. Lands in which there is an endless war for power. It is here that armies of fierce demons and beautiful demonettes clash under the leadership of future lords.",
    "ru": "Добро пожаловать в Пандемониум, мир, что лежит за долиной смертной тени. Земли, раздираемые бесконечной войной за власть. Именно здесь армии свирепых демонов и прекрасных демонесс сражаются под предвадительством будущих лордов."
  },
  "lore-about_title": {
    "en": "Dear traveler,",
    "ru": "Дорогой путешественник,"
  },
  "lore-about_text": {
    "en": "I do not know who you got this map from and for how much, but remember that you now hold an incredibly rare artefact. Please, keep it safe. <br/> I’ve spent more than ten years working on it and I’ve marked all the villages and astral cities that I’ve ever been to. <br/> Now, the first Pandemonium plan is ready for your personal discoveries. Its future holders are sure to learn about them. <br/> P.S. if you are thinking that you're dealing with an ordinary piece of paper, you're incredibly mistaken <br/>Respectfully, hundering Manrock, wizard and cartographer. ",
    "ru": "не знаю от кого и за сколько ты получил эту карту, однако помни, что теперь в твоих руках находится невероятно редкий артефакт. Пожалуйста, защити его. <br/>Я работал над этой картой больше десятка лет и отметил на ней всё деревни и астральные города, которые повстречал. <br/>Теперь первый план Пандемониума готов для твоих личных открытий. О них обязательно узнают следующие владельцы карты. <br/>P.S. если ты считаешь, что имеешь дело с обычным куском бумаги, то невероятно ошибаешься <br/> С уважением, Громогласный Манрок,  волшебник и картограф. "
  },
  "lore-last_title": {
    "en": "You can learn about the creatures that live in the world of Pandemonium from our Bestiary",
    "ru": "О существах, которые обитают в мире Пандемониума Вы можете узнать из нашего Бестиария"
  },

  /*btns*/
  "btn_ah": {
    "en": "Find us on atomichub",
    "ru": "Найди нас на atomichub"
  },
  "btn_bot": {
    "en": "Pandemonium bot",
    "ru": "Pandemonium бот"
  },
  "btn_bestiary": {
    "en": "Bestiary",
    "ru": "Бестиарий"
  },
  "btn_team": {
    "en": "Team",
    "ru": "Команда"
  },
  "btn_about": {
    "en": "About",
    "ru": "О нас"
  },
  "btn_home": {
    "en": "Home",
    "ru": "Главная"
  },
  "btn_lore": {
    "en": "Lore",
    "ru": "Лор"
  },
  "btn_nav": {
    "en": "Navigation",
    "ru": "Навигация"
  },
  "btn_lore_home": {
    "en": "To the main",
    "ru": "На главную"
  }
};

function addBestiary_pack(pack, pack_name, list_id) {
  var list = document.querySelector(list_id);
  var elems = list.querySelectorAll('li');
  var _lang = '';
  f_check_lang();
  elems.forEach(function (el) {
    return el.remove();
  });
  pack.forEach(function (el, i) {
    var HTML = '';
    var first = "<li class=\"bestiary-list__el\">\n    <div class=\"bestiary-list__block\">\n      <img src=\"./assets/images/".concat(pack_name, "/").concat(el.img, ".png\"> \n      <div class=\"bestiary-list__box\">");
    var title = '<h3 class="title">no name</h3>';

    if (el[_lang].bestiary.title === "" || !el[_lang].bestiary.title) {
      title = "<h3 class=\"title\">".concat(el[_lang].title, "</h3>");
    } else {
      title = "<h3 class=\"title\">".concat(el[_lang].bestiary.title, "</h3>");
    }

    var end = "\n      <p class=\"text scroll_1\">".concat(el[_lang].bestiary.text, "</p>\n      </div>\n    </div>\n    <div class=\"hr\"></div>\n    </li>");
    HTML = first + title + end;
    list.insertAdjacentHTML('beforeEnd', HTML);
  });

  function f_check_lang() {
    var ls = window.localStorage;

    if (!ls.pandemonium_lang) {
      ls.setItem('pandemonium_lang', 'en');
      _lang = ls.pandemonium_lang;
    } else {
      _lang = ls.pandemonium_lang;
    }
  }
}

;

function add_lore_zone() {
  var list = document.querySelector('.lore-history__list');
  var old_zones = list.querySelectorAll('li');
  var zones = data_lore.lore;
  var lang = window.localStorage.pandemonium_lang;
  old_zones.forEach(function (el) {
    return el.remove();
  });
  zones.forEach(function (el, i) {
    var html = '';
    var first = "<li class=\"lore-history__el\" id=\"".concat(el.id, "\">\n\t\t\t<h3 class=\"title _grad\">").concat(el[lang].title, "</h3>\n\t\t\t<div class=\"lore-history__block\">\n\t\t\t\t<img src=\"./assets/images/map/").concat(el.img, ".png\">\t");
    var text = '';
    var placeholder = '';
    el[lang].text.forEach(function (p) {
      return text += "<p class=\"lore-text\">".concat(p, "</p>");
    });

    if (el[lang].placeholder) {
      placeholder = "<p class=\"lore-placeholder\">".concat(el[lang].placeholder, "</p>");
    }

    var end = "\n\t\t\t</div>\n\t\t</li>";
    html = first + text + placeholder + end;
    list.insertAdjacentHTML('beforeEnd', html);
  });
}

;

function dark_theme() {
  var main_cont = document.querySelector('.mainContent');
  var logo = document.querySelector('.btn-theme');

  logo.onclick = function () {
    check_theme();
  };

  function check_theme() {
    if (logo.classList.contains('_active')) {
      main_cont.classList.remove('_dark');
      logo.classList.remove('_active');
    } else {
      main_cont.classList.add('_dark');
      logo.classList.add('_active');
    }
  }

  check_theme();
}

dark_theme();
;
/*_______src________req*/

var d_pack_1 = './resources/data/pack_1.json';
var d_pack_2 = './resources/data/pack_2.json';
var d_roadmap = './resources/data/roadmap.json';
var d_team = './resources/data/team.json';
var d_lore = './resources/data/lore.json';
/*______data_vars__________*/

var data_pack_1 = null;
var data_pack_2 = null;
var data_roadmap = null;
var data_team = null;
var data_lore = null;
/*_______main_vars_______*/

var m_pack_1 = undefined;
var m_pack_2 = undefined;
var m_roadmap = undefined;
var m_team = undefined;
/*lore*/

var m_lore = undefined;
/*bestiary*/

var m_bestiary_pack_1 = undefined;
var m_bestiary_pack_2 = undefined;
sendRequest('GET', d_pack_1).then(function (data) {
  data_pack_1 = data;
  addCard(slider_1, '#slider-cards_1', 'pack_1', data.pack_1);
  addBestiary_pack(data.pack_1, 'pack_1', '#bestiary-pack_1');
}).then(function (e) {
  var sec = document.querySelector('#slider-cards_1');
  m_pack_1 = sec.querySelectorAll('li');
  /*bestiary*/

  var bestiary_list = document.querySelector('#bestiary-pack_1');
  m_bestiary_pack_1 = bestiary_list;
})["catch"](function (err) {
  return console.log(err);
});
sendRequest('GET', d_pack_2).then(function (data) {
  data_pack_2 = data;
  addCard(slider_2, '#slider-cards_2', 'pack_2', data.pack_2);
  addBestiary_pack(data.pack_2, 'pack_2', '#bestiary-pack_2');
}).then(function (e) {
  var sec = document.querySelector('#slider-cards_2');
  m_pack_2 = sec.querySelectorAll('li');
  /*bestiary*/

  var bestiary_list = document.querySelector('#bestiary-pack_2');
  m_bestiary_pack_2 = bestiary_list;
})["catch"](function (err) {
  return console.log(err);
});
sendRequest('GET', d_roadmap).then(function (data) {
  data_roadmap = data;
  add_roadmap();
}).then(function (e) {
  var sec = document.querySelector('#s_roadmap');
  m_roadmap = sec.querySelectorAll('.road');
})["catch"](function (err) {
  return console.log(err);
});
sendRequest('GET', d_team).then(function (data) {
  data_team = data;
  team_add(data.team);
}).then(function (e) {
  var sec = document.querySelector('#s_team');
  m_team = sec.querySelectorAll('.splide__slide');
})["catch"](function (err) {
  return console.log(err);
});
sendRequest('GET', d_lore).then(function (data) {
  data_lore = data;
  add_lore_zone();
}).then(function (e) {
  var sec = document.querySelector('.lore-history');
  m_lore = sec.querySelectorAll('li');
})["catch"](function (err) {
  return console.log(err);
});

function hamburger() {
  var hamburger = document.querySelector('.hamburger');
  var hamburger_menu = document.querySelector('.header__block');
  var link_elems = document.querySelectorAll('.nav__link');
  var header = document.querySelector('.header');
  var body = document.querySelector('body');
  var preloader = document.querySelector('.preloading');

  hamburger.onclick = function () {
    hamburger.classList.toggle('_active');
  };

  setInterval(function () {
    if (preloader.classList.contains('_active')) {
      body.style.overflow = 'hidden';
    } else if (hamburger.classList.contains("_active")) {
      header.classList.add('header-bg-none');
      hamburger_menu.classList.add('hamburger-menu_active');
      body.style.overflow = 'hidden';
    } else {
      header.classList.remove('header-bg-none');
      hamburger_menu.classList.remove('hamburger-menu_active');
      body.style.overflow = 'auto';
    }
  }, 100);
  link_elems.forEach(function (item, i) {
    item.onclick = function () {
      hamburger.classList.remove("_active");
      window.location.hash = '';
    };
  });
}

hamburger();
;

function header_fix() {
  var header = document.querySelector('.header');

  document.onscroll = function () {
    showHeader();
  };

  function showHeader() {
    if (window.pageYOffset > 200) {
      header.classList.add('header_fixed');
    } else {
      header.classList.remove('header_fixed');
    }
  }
}

header_fix();
;

function hover_bg_img() {
  var slide_box = document.querySelector('.hover-img-bg');

  slide_box.onmousedown = function () {
    slide_box.onmousemove = function (e) {
      var x = e.offsetX;
      document.querySelector('.hover-img-bg__box').style.width = x + 'px';
    };
  };

  slide_box.addEventListener("touchstart", function (e_1) {
    document.querySelector('.hover-img-bg__box').style.width = e_1.touches[0].pageX + 'px';
    slide_box.addEventListener("touchmove", function (e_2) {
      var x = e_2.touches[0].pageX;
      document.querySelector('.hover-img-bg__box').style.width = x + 'px';
    });
  });

  slide_box.onmouseup = function () {
    slide_box.onmousemove = null;
  };

  slide_box.onmouseleave = function () {
    slide_box.onmousemove = null;
  };
}

hover_bg_img();
;
;

function localization() {
  var ls = window.localStorage;

  if (!ls.pandemonium_lang) {
    ls.setItem('pandemonium_lang', 'en');
    check_lang();
  } else {
    check_lang();
  }

  function check_lang() {
    var _lang = ls.pandemonium_lang;

    var _loop = function _loop(key) {
      var elems = document.querySelectorAll(".lng-".concat(key));
      elems.forEach(function (el) {
        if (el && content[key][_lang]) el.innerHTML = content[key][_lang];else console.log('err', content[key]);
      });
    };

    for (var key in content) {
      _loop(key);
    }

    lng_roadmap(_lang);
    lng_packs(_lang);
    lng_team(_lang);
    lng_bestiary(_lang);
    lng_lore(_lang);
    lng_map_zone(_lang);
  }
  /*_________funcs______________*/


  function lng_roadmap(lang) {
    if (m_roadmap) {
      var roads = m_roadmap;
      var data = data_roadmap.roadmap;
      roads.forEach(function (road, i) {
        var road_date = road.querySelector('.date');
        var road_name = road.querySelector('.name');
        var road_list = road.querySelectorAll('li');

        if (data[i]) {
          road_date.textContent = data[i][lang].date;
          road_name.textContent = data[i][lang].title;
          road_list.forEach(function (el, index) {
            return el.textContent = data[i][lang].list[index];
          });
        }
      });
    }
  }

  function lng_packs(lang) {
    if (m_pack_1 && m_pack_2) {
      var add_lang = function add_lang(info) {
        info.dom.forEach(function (el, i) {
          var title = el.querySelector('.title');
          var text = el.querySelector('.text');

          if (info.data[i]) {
            title.textContent = info.data[i][lang].title;
            text.textContent = info.data[i][lang].text;
          }
        });
      };

      var packs = [{
        dom: m_pack_1,
        data: data_pack_1.pack_1
      }, {
        dom: m_pack_2,
        data: data_pack_2.pack_2
      }];
      packs.forEach(function (el) {
        return add_lang(el);
      });
      slider_1.refresh();
      slider_2.refresh();
    }
  }

  function lng_team(lang) {
    if (m_team) {
      var team = m_team;
      var data = data_team.team;
      team.forEach(function (el, i) {
        var name = el.querySelector('.name');
        var work = el.querySelector('.work');
        var text = el.querySelector('.text');

        if (data[i]) {
          name.textContent = data[i][lang].name;
          work.textContent = data[i][lang].work;
          text.innerHTML = data[i][lang].about;
        }
      });
    }
  }

  function lng_bestiary(lang) {
    if (m_bestiary_pack_1 && m_bestiary_pack_2) {
      var add_lang = function add_lang(info) {
        var list = info.dom.querySelectorAll('li');
        list.forEach(function (el, i) {
          var title = el.querySelector('.title');
          var text = el.querySelector('.text');

          if (info.data[i]) {
            var data = info.data[i][lang];
            text.innerHTML = data.bestiary.text;

            if (!data.bestiary.title || data.bestiary.title === "") {
              title.textContent = data.title;
            } else title.textContent = data.bestiary.title;
          }
        });
      };

      var packs = [{
        dom: m_bestiary_pack_1,
        data: data_pack_1.pack_1
      }, {
        dom: m_bestiary_pack_2,
        data: data_pack_2.pack_2
      }];
      packs.forEach(function (el) {
        return add_lang(el);
      });
    }
  }

  function lng_lore(lang) {
    if (m_lore) {
      var lore = m_lore;
      var data = data_lore.lore;
      lore.forEach(function (el, i) {
        var title = el.querySelector('.title');
        var placeholder = el.querySelector('.lore-placeholder');
        var text_all = el.querySelectorAll('.lore-text');
        title.textContent = data[i][lang].title;

        if (placeholder && data[i][lang].placeholder) {
          placeholder.textContent = data[i][lang].placeholder;
        }

        text_all.forEach(function (p, idx) {
          var text = data[i][lang].text[idx];
          if (text) p.textContent = text;
        });
      });
    }
  }

  function lng_map_zone() {
    if (data_lore) {
      var lang = window.localStorage.pandemonium_lang;
      var name_zones = document.querySelectorAll('.map-zone__name');
      name_zones.forEach(function (el, i) {
        el.textContent = data_lore.lore[i][lang].title;
      });
    }
  }
  /*________btns____*/


  function localization_btns() {
    var btns = document.querySelectorAll('.lng-btn');
    var select = document.querySelector('.btns-lang__select');

    select.onclick = function () {
      select.parentNode.classList.toggle('_active');
    };

    btns.forEach(function (el) {
      el.onclick = function () {
        ls.pandemonium_lang = el.dataset.lang; //location.reload();

        check_lang();
        select.parentNode.classList.remove('_active');
        flag();
      };
    });

    function flag() {
      var svg = select.querySelector('use');
      var src = svg.getAttribute('xlink:href');
      src = src.substr(0, src.length - 2);
      src += ls.pandemonium_lang;
      svg.setAttribute('xlink:href', src);
    }

    flag();
  }

  localization_btns();
}

localization();
setTimeout(localization, 5000);
;

function map() {
  var map = document.querySelector('.map');
  var zones = map.querySelectorAll('.map-zone__el');
  var images = map.querySelectorAll('img._fix');
  zones.forEach(function (el, i) {
    var point = el.parentNode.parentNode.querySelector(".map-points__point._".concat(i + 1));

    point.onclick = function (e) {
      if (data_lore) map_modal(data_lore.lore[i].id, e);
    };

    if (window.innerWidth > 800) {
      el.onmouseover = function () {
        return add_class(el, i);
      };

      el.onmouseout = function () {
        return remove_class(el, i);
      };

      add_names_zone(el, i);

      el.onclick = function (e) {
        if (data_lore) map_modal(data_lore.lore[i].id, e);
      };
    } else {
      el.ontouchstart = function () {
        return add_class(el, i);
      };

      el.ontouchend = function () {
        return remove_class(el, i);
      };
    }
  });

  function add_class(item, index) {
    images[index].classList.add('_active');
    item.classList.add('_active');
    return false;
  }

  function remove_class(item, index) {
    images.forEach(function (el) {
      return el.classList.remove('_active');
    });
    item.classList.remove('_active');
    return false;
  }

  function add_names_zone(el, i) {
    var check_lore_get = setInterval(function () {
      if (data_lore) {
        var lang = window.localStorage.pandemonium_lang;
        var name = el.querySelector('.map-zone__name');
        name.textContent = data_lore.lore[i][lang].title;
        clearInterval(check_lore_get);
      }
    }, 100);
  }
}

map();

function map_modal(id, event) {
  if (id) {
    var modal = document.querySelector('.map-modal');
    var overlay = modal.querySelector('.map-modal__overlay');
    var btn = modal.querySelector('.btn-more');
    var remove_btn = modal.querySelector('.remove');

    remove_btn.onclick = function () {
      modal.classList.remove('_active');
    };

    var lang = window.localStorage.pandemonium_lang;
    var m_title = modal.querySelector('.title');
    var m_text = modal.querySelector('.lore-text');
    var title = '';
    var text = '';
    data_lore.lore.forEach(function (el) {
      if (el.id == id) {
        title = el[lang].title;
        text = el[lang].text[0];
      }
    });
    m_title.textContent = title;
    m_text.textContent = text;
    modal.classList.add('_active');

    btn.onclick = function (e) {
      modal.classList.remove('_active');
      var all_h = document.querySelector('.lore').offsetHeight;
      var pos_1 = event.pageY;
      var pos_2 = document.querySelector("#".concat(id)).offsetTop;
      var center = event.clientY - window.innerHeight / 2;
      var up = window.innerHeight * 36 / 100;
      var scroll = pos_2 - pos_1 + center + up;
      window.scrollBy({
        top: scroll,
        left: 0,
        behavior: "smooth"
      });
    };

    overlay.onclick = function () {
      modal.classList.remove('_active');
    };
  }
}

;
var slider_1 = new Splide('#slider-cards_1', {
  perPage: 4,
  perMove: 1,
  arrows: false,
  type: 'loop',
  pagination: true,
  autoplay: true
}).mount();
/*____________________________________*/

var slider_2 = new Splide('#slider-cards_2', {
  perPage: 4,
  perMove: 1,
  arrows: false,
  type: 'loop',
  pagination: true,
  autoplay: true
}).mount();

function addCard(slider_splide, slider_id, pack_name, pack) {
  var slider = slider_splide;
  var slider_list = document.querySelector(slider_id).querySelector('.splide__list');
  var slider_slides = slider_list.querySelectorAll('.splide__slide');
  slider_slides.forEach(function (el) {
    return el.remove();
  });
  var _lang = '';
  f_check_lang();
  pack.forEach(function (el) {
    slider.add("<li class=\"splide__slide\">\n        <div class=\"card\">\n          <button class=\"flip\">\n            <svg><use xlink:href=\"./assets/icons/svg/sprite.svg#flip\"></use></svg>\n          </button>\n          <div class=\"front\">\n            <img src=\"./assets/images/".concat(pack_name, "/").concat(el.img, ".png\"/>\n          </div>\n          <div class=\"back\">\n            <img src=\"./assets/images/").concat(pack_name, "/").concat(el.img, ".png\"/>\n            <div class=\"back__block\">\n              <h5 class=\"title\">").concat(el[_lang].title, "</h5>\n              <p class=\"text scroll_1\">").concat(el[_lang].text, "</p>\n            </div>\n          </div>\n        </div>\n      </li>>"));
  });
  btn_flip();

  function f_check_lang() {
    var ls = window.localStorage;

    if (!ls.pandemonium_lang) {
      ls.setItem('pandemonium_lang', 'en');
      _lang = ls.pandemonium_lang;
    } else {
      _lang = ls.pandemonium_lang;
    }
  }
}
/*____card_flip*/


function btn_flip() {
  var btns = document.querySelectorAll('.flip');
  btns.forEach(function (btn) {
    btn.onclick = function () {
      var card = btn.parentNode;
      card.classList.toggle('_active');
    };
  });
}

;

function add_roadmap() {
  var roadmap_cont = document.querySelector('#roadmap_cont');
  var _lang = '';
  f_check_lang();
  data_roadmap.roadmap.forEach(function (el, i) {
    var html = '';
    var first = "<div class=\"road\" data-aos>\n\t\t\t<div class=\"road__block\">\n\t\t\t\t<h3 class=\"date\">".concat(el[_lang].date, "</h3>\n\t\t\t\t<h5 class=\"name\">").concat(el[_lang].title, "</h5>\n\t\t\t\t<ul class=\"road__list\">");
    var list = '';
    var end = "</ul>\n\t\t\t</div>\n\t\t\t<div class=\"point\" style=\"background: linear-gradient(125deg, ".concat(el.colors._1, " 0%, ").concat(el.colors._2, " 100%);\">\n\t\t\t\t<svg><use xlink:href=\"./assets/icons/svg/sprite.svg#arrows\"></use></svg>\n\t\t\t</div>\n\t\t</div>");
    if (el[_lang].list) el[_lang].list.forEach(function (item) {
      return list += "<li class=\"road__el\">".concat(item, "</li>");
    });
    html = first + list + end;
    roadmap_cont.insertAdjacentHTML('beforeEnd', html);
  });

  function f_check_lang() {
    var ls = window.localStorage;

    if (!ls.pandemonium_lang) {
      ls.setItem('pandemonium_lang', 'en');
      _lang = ls.pandemonium_lang;
    } else {
      _lang = ls.pandemonium_lang;
    }
  }

  AOS.refresh;
}

;
var team_slider = new Splide('.team', {
  perPage: 4,
  perMove: 1,
  pagination: true
}).mount();

function team_add(data) {
  var team_list = document.querySelector('.team');
  var team_el = team_list.querySelectorAll('.splide__slide');
  var _lang = '';
  f_check_lang();
  team_el.forEach(function (el) {
    return el.remove();
  });
  data.forEach(function (el) {
    add(el);
  });

  function add(el) {
    team_slider.add("<li class=\"splide__slide team__el\">\n        <div class=\"team__el\">\n          <div class=\"team__box\">\n            <img src=\"./assets/images/team/".concat(el.img, ".png\" class=\"img_b\"/>\n            <img src=\"./assets/images/team/").concat(el.img, "_w.png\" class=\"img_w\"/>\n            <div class=\"info\">\n              <div class=\"name\">").concat(el[_lang].name, "</div>\n              <div class=\"work\">").concat(el[_lang].work, "</div>\n              <div class=\"text scroll_1\">").concat(el[_lang].about, "</div>\n            </div>\n            <button class=\"more\"></button>\n          </div>\n        </div>\n      </li>"));
  }

  team_btns();

  function f_check_lang() {
    var ls = window.localStorage;

    if (!ls.pandemonium_lang) {
      ls.setItem('pandemonium_lang', 'en');
      _lang = ls.pandemonium_lang;
    } else {
      _lang = ls.pandemonium_lang;
    }
  }
}

function team_btns() {
  var btns = document.querySelectorAll('.more');
  btns.forEach(function (btn) {
    btn.onclick = function () {
      btn.parentNode.classList.toggle('_active');
    };
  });
}

function remove_team(elms) {
  elms.forEach(function (el) {
    return remove();
  });
}

;

function anchors() {
  var anchors = document.querySelectorAll("a[href*='#']");

  var _iterator = _createForOfIteratorHelper(anchors),
      _step;

  try {
    var _loop2 = function _loop2() {
      var anchor = _step.value;
      anchor.addEventListener('click', function (event) {
        event.preventDefault();
        var blockID = anchor.getAttribute('href');
        document.querySelector('' + blockID).scrollIntoView({
          behavior: "smooth",
          block: "start"
        });
      });
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop2();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

anchors();
;
AOS.init({
  // Global settings:
  disable: false,
  // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded',
  // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init',
  // class applied after initialization
  animatedClassName: 'aos-animate',
  // class applied on animation
  useClassNames: false,
  // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false,
  // disables automatic mutations' detections (advanced)
  debounceDelay: 50,
  // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99,
  // the delay on throttle used while scrolling the page (advanced)
  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 120,
  // offset (in px) from the original trigger point
  delay: 0,
  // values from 0 to 3000, with step 50ms
  duration: 400,
  // values from 0 to 3000, with step 50ms
  easing: 'ease',
  // default easing for AOS animations
  once: false,
  // whether animation should happen only once - while scrolling down
  mirror: false,
  // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom' // defines which position of the element regarding to window should trigger the animation

});
window.addEventListener('load', AOS.refresh);

function media(slider_1, slider_2, slider_team) {
  // options;
  var large = false;
  var lar_slides = 4;
  var desktop = true;
  var d_slides = 3;
  var laptop = false;
  var l_slides = 2;
  var tablet = false;
  var t_slides = 1;
  var phone = false;
  var p_slides = 1;
  var slidesToShow = 0;
  var mediaLarge = window.matchMedia('(min-width: 1280px)');
  var mediaDesktop = window.matchMedia('(max-width: 1280px)');
  var mediaLaptop = window.matchMedia('(max-width: 1024px)');
  var mediaTablet = window.matchMedia('(max-width: 820px)');
  var mediaPhone = window.matchMedia('(max-width: 480px)');

  if (mediaLarge.matches) {
    tablet = false;
    laptop = false;
    phone = false;
    desktop = false;
    large = true;
  }

  if (mediaDesktop.matches) {
    tablet = false;
    laptop = false;
    phone = false;
    large = false;
    desktop = true;
  }

  if (mediaLaptop.matches) {
    desktop = false;
    tablet = false;
    phone = false;
    large = false;
    laptop = true;
  }

  if (mediaTablet.matches) {
    desktop = false;
    laptop = false;
    phone = false;
    large = false;
    tablet = true;
  }

  if (mediaPhone.matches) {
    tablet = false;
    laptop = false;
    desktop = false;
    large = false;
    phone = true;
  }

  if (large) {
    slidesToShow = lar_slides;
  }

  if (desktop) {
    slidesToShow = d_slides;
  }

  if (laptop) {
    slidesToShow = l_slides;
  }

  if (tablet) {
    slidesToShow = t_slides;
  }

  if (phone) {
    slidesToShow = p_slides;
  }

  slider_1.options = {
    perPage: slidesToShow
  };
  slider_2.options = {
    perPage: slidesToShow
  };
  slider_team.options = {
    perPage: slidesToShow
  };
}
/*_______________media______*/


media(slider_1, slider_2, team_slider);

window.onresize = function () {
  media(slider_1, slider_2, team_slider);
  img_w_rez();
};
/*img_bg*/


function img_w_rez() {
  var slide_box = document.querySelector('.hover-img-bg');
  var imgs = slide_box.querySelectorAll('img');
  var box_w = slide_box.clientWidth;
  imgs.forEach(function (el) {
    el.style.width = "".concat(box_w, "px");
  });
}

setInterval(function () {
  img_w_rez();
}, 500);

function myRouter() {
  var pages = {
    base: true,
    bestiary: false,
    lore: false
  };

  var locationResolver = function locationResolver(location) {
    switch (location) {
      case "/":
        pageActive(location);
        break;

      case "#/bestiary":
        pageActive(location);
        break;

      case "#/lore":
        pageActive(location);
        break;
    }
  }; // hash watcher


  window.onhashchange = function () {
    setTimeout(function () {
      checkHash();
      check_bestiary();
      check_lore();
    }, 100);
  };
  /*_________funcs_____*/


  function checkHash() {
    var location = window.location.hash;

    if (location) {
      locationResolver(location);
    }

    if (window.location.hash == "" || window.location.hash == "/") {
      var base_page = document.querySelector(".base");

      for (var item in pages) {
        var page = document.querySelector(".".concat(item));

        if (page == base_page) {
          page.classList.add('_activePage');
        } else {
          page.classList.remove('_activePage');
        }
      }
    }
  }

  checkHash();

  function pageActive(location) {
    var name = location.substr(2);
    var page_active = document.querySelector(".".concat(name));

    for (var item in pages) {
      var page = document.querySelector(".".concat(item));

      if (page == page_active) {
        page.classList.add('_activePage');
      } else {
        page.classList.remove('_activePage');
      }
    }
  }

  function check_bestiary() {
    var main = document.querySelector('.mainContent');

    if (window.location.hash == '#/bestiary') {
      main.classList.add('_page-bestiary');
    } else {
      main.classList.remove('_page-bestiary');
    }
  }

  check_bestiary();

  function check_lore() {
    var main = document.querySelector('.mainContent');

    if (window.location.hash == '#/lore') {
      main.classList.add('_page-lore');
    } else {
      main.classList.remove('_page-lore');
    }
  }

  check_lore();
}

myRouter();

function btns() {
  var home = document.querySelectorAll('.page-btns_home');
  var bestiary = document.querySelectorAll('.page-btns_bestiary');
  var lore = document.querySelectorAll('.page-btns_lore');
  home.forEach(function (el) {
    return el.addEventListener('click', function () {
      window.location.hash = '';
    });
  });
  bestiary.forEach(function (el) {
    return el.addEventListener('click', function () {
      window.location.hash = '#/bestiary';
    });
  });
  lore.forEach(function (el) {
    return el.addEventListener('click', function () {
      window.location.hash = '#/lore';
    });
  });
}

btns();
;

function preloading() {
  var preloader = document.querySelector('.preloading');
  /*
    preloader.classList.add('_active');
  
    window.onload = ()=>{   
      preloader.classList.remove('_active');
    }
  
    setTimeout(()=>{
      preloader.classList.remove('_active');
    }, 5000)*/
}

preloading();
;

function sendRequest(method, url) {
  return new Promise(function (resolve, reject) {
    var xhr = new XMLHttpRequest();
    xhr.open(method, url);
    xhr.responseType = 'json';

    xhr.onload = function () {
      if (xhr.status >= 400) {
        reject(xhr.response);
      } else {
        resolve(xhr.response);
      }
    };

    xhr.onerror = function () {
      reject(xhr.response);
    };

    xhr.send();
  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
