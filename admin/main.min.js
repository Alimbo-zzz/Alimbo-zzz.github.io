"use strict";

;
/*_______________*/

function add_text(active_bot) {
  var inp_name = document.querySelector("input[name='name']");
  var inp_description = document.querySelector("textarea[name='description']");
  var users = document.querySelector('#users');
  inp_name.value = active_bot.name;
  inp_description.textContent = active_bot.description;
  users.textContent = "".concat(active_bot.usersAlive, " / ").concat(active_bot.usersTotal);
}

;

function click_bot(data) {
  var bots_el = document.querySelectorAll('.bot');
  var bots_new = document.querySelectorAll('.bar__el');

  if (localStorage.active_bot) {
    var save_bot = localStorage.active_bot;
    clear_class();
    bots_new[save_bot].classList.add('_active');
  }

  bots_el.forEach(function (el, index) {
    el.onclick = function () {
      clear_class();
      el.parentNode.classList.add('_active');
      add_text(data[index]);

      if (index !== active_index) {
        add_text(newBots[index]);
        localStorage.setItem('active_bot', index);
      }
    };
  });

  function clear_class() {
    bots_el.forEach(function (el) {
      el.parentNode.classList.remove('_active');
    });
  }
}

;

function edit() {
  var edit_btn = document.querySelector('.edit');
  var save_btn = document.querySelector('.save');
  var form = document.querySelector('.form');
  var inp = document.querySelector("input[name='name']");

  edit_btn.onclick = function () {
    edit_btn.classList.toggle('_active');
    check_btn();
  };

  save_btn.onclick = function () {
    edit_btn.classList.toggle('_active');
    check_btn();
    save();
  };
  /*_______________func____*/


  function check_btn() {
    if (edit_btn.classList.contains('_active')) {
      save_btn.classList.remove('_active');
      form.classList.add('_active');
      inp.focus();
    } else {
      save_btn.classList.add('_active');
      form.classList.remove('_active');
    }
  }

  check_btn();
}

edit();
;
var BaseURL = 'http://136.244.96.201:16324/bots/list';
var active_index = 0;
var newBots = [];
sendRequest('GET', BaseURL).then(function (data) {
  addBots(data.bots);
  click_bot(data.bots);
  newBots = data.bots;
  live_search();
  console.log(data);
})["catch"](function (err) {
  return console.log(err);
});

function addBots(bots) {
  var list = document.querySelector('.bar__list');
  var old_bots = document.querySelectorAll('.bar__el');
  old_bots.forEach(function (el) {
    return el.remove();
  });
  bots.forEach(function (el) {
    list.insertAdjacentHTML('beforeEnd', "\n\t\t\t\t<li class=\"bar__el\">\n\t\t\t\t\t<div class=\"bot\">\n\t\t\t\t\t\t<h4 class=\"bot__name\">".concat(el.name, "</h4>\n\t\t\t\t\t\t<div class=\"bot__box\">\n\t\t\t\t\t\t\t<div class=\"bot__users\">\n\t\t\t\t\t\t\t\t<svg><use xlink:href= './assets/icons/svg/sprite.svg#users'></use></svg>\n\t\t\t\t\t\t\t\t<span class=\"value\">").concat(el.usersAlive, "</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bot__message\">\n\t\t\t\t\t\t\t\t<svg><use xlink:href= './assets/icons/svg/sprite.svg#message'></use></svg>\n\t\t\t\t\t\t\t\t<span class=\"value\">").concat(el.usersTotal, "</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t"));
  });

  if (localStorage.active_bot) {
    add_text(bots[localStorage.active_bot]);
  } else {
    add_text(bots[active_index]);
  }
}

;

function hamburger() {
  var hamburger = document.querySelector('.hamburger');
  var main = document.querySelector('.mainContent');
  var link_elems = document.querySelectorAll('.bar__el');
  var overlay = document.querySelector('.overlay');

  hamburger.onclick = function () {
    hamburger.classList.toggle('_active');
    check_h();
  };

  overlay.onclick = function () {
    hamburger.classList.remove('_active');
    check_h();
  };

  function check_h() {
    if (hamburger.classList.contains('_active')) {
      main.classList.add('_active');
      overlay.classList.add('_active');
    } else {
      main.classList.remove('_active');
      overlay.classList.remove('_active');
    }
  }

  link_elems.forEach(function (item, i) {
    item.onclick = function () {
      hamburger.classList.remove("_active");
      check_h();
    };
  });
}

hamburger();
;

function save() {
  var save_btn = document.querySelector('.save');
  var inp_name = document.querySelector("input[name='name']");
  var inp_description = document.querySelector("textarea[name='description']");
  var url = 'http://136.244.96.201:16324/bots/update';
  var body = {
    id: 0,
    name: String,
    description: String
  };
  body.name = inp_name.value;
  body.description = inp_description.value;
  body.id = newBots[active_index].id;
  sendRequest('POST', url, body).then(function (data) {
    addBots(data.bots);
    click_bot(data.bots);
    live_search();
  })["catch"](function (err) {
    return console.log(err);
  });
}

setInterval(function () {
  var elems = document.querySelectorAll('.bar__el');
  elems.forEach(function (el, index) {
    if (el.classList.contains('_active')) {
      active_index = index;
    }
  });
}, 100);

function send_message() {
  var form = document.querySelector('.form');
  form.addEventListener('submit', function (e) {
    e.preventDefault();

    _send();
  });
}

send_message();

function _send() {
  var inp_message = document.querySelector('textarea[name="message"]');
  var url = 'http://136.244.96.201:16324/send';
  var body = {
    id: Number,
    message: String
  };
  body.id = newBots[active_index].id;
  body.message = inp_message.value;
  sendRequest('POST', url, body).then(function (data) {
    console.log(data);
    inp_message.value = '';
  })["catch"](function (err) {
    return console.log(err);
  });
}

;

function live_search(search_inp, list) {
  search_inp = document.querySelector('.search__inp');
  list = document.querySelector('.bar');
  /*________________________________*/

  search_inp.oninput = function () {
    var value = search_inp.value.trim();
    var list_elms = list.querySelectorAll('li');

    if (value != '') {
      list_elms.forEach(function (el) {
        if (el.innerText.search(value) == -1) {
          el.classList.add('_hide');
        } else {
          el.classList.remove('_hide');
        }
      });
    } else {
      list_elms.forEach(function (e) {
        return e.classList.remove('_hide');
      });
    }
  };
}

;

function sendRequest(method, url) {
  var body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  return new Promise(function (resolve, reject) {
    var xhr = new XMLHttpRequest();
    xhr.open(method, url);
    xhr.responseType = 'json';
    xhr.setRequestHeader('Content-Type', 'application/json');

    xhr.onload = function () {
      if (xhr.status >= 400) {
        reject(xhr.response);
      } else {
        resolve(xhr.response);
      }
    };

    xhr.onerror = function () {
      reject(xhr.response);
    };

    xhr.send(JSON.stringify(body));
  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
